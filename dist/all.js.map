{"version":3,"sources":["script.js"],"names":["today","Date","currentDay","getDate","currentMonth","getMonth","currentYear","getFullYear","form","document","querySelector","dayLabel","monthLabel","yearLabel","dayInput","monthInput","yearInput","dayError","monthError","yearError","yearOutput","monthOutput","dayOutput","validateDay","day","birthDate","textContent","classList","add","remove","validateMonth","month","validateYear","year","validateLeapYear","yearInputValue","getDaysInMonth","monthDifference","daysInMonthArray","console","log","addEventListener","e","preventDefault","Number","value","trim","monthInputValue","dayInputValue","validateDayResult","validateMonthResult","validateYearResult","yearDifference","dayDifference"],"mappings":"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","file":"all.js","sourcesContent":["\"use strict\";\r\n\r\n/* || Current Date*/\r\nconst today = new Date();\r\nconst currentDay = today.getDate();\r\nconst currentMonth = today.getMonth(); // month is zero-indexed, starting from 0.\r\nconst currentYear = today.getFullYear();\r\n\r\n/* || Element*/\r\n\r\n// Form\r\nconst form = document.querySelector('.js-form');\r\n\r\n// Label\r\nconst dayLabel = document.querySelector('.js-day-input-label');\r\nconst monthLabel = document.querySelector('.js-month-input-label');\r\nconst yearLabel = document.querySelector('.js-year-input-label');\r\n\r\n//Input\r\nconst dayInput = document.querySelector('.js-day-input');\r\nconst monthInput = document.querySelector('.js-month-input');\r\nconst yearInput = document.querySelector('.js-year-input');\r\n\r\n//Error\r\nconst dayError = document.querySelector('.js-error-day');\r\nconst monthError = document.querySelector('.js-error-month');\r\nconst yearError = document.querySelector('.js-error-year');\r\n\r\n// Output\r\nconst yearOutput = document.querySelector('.js-year-output');\r\nconst monthOutput = document.querySelector('.js-month-output');\r\nconst dayOutput = document.querySelector('.js-day-output');\r\n\r\n/* || Form Validation\r\nValidateDay\r\n* param: day (dayInputValue - type: Number), birthDate (date object constructed using year, month & day inputValue in Number)\r\n* check empty input - where inputValue = Number(\"\") => 0   \r\n* check input range between 1 & 31\r\n* check valid date (e.g., 2000-4-31 => false)\r\n\r\nvalidateMonth\r\n* param: month (monthInputValue - type: Number)\r\n* check empty input - where inputValue = Number(\"\") => 0\r\n* check input range between 1 & 12\r\n\r\nvalidateYear\r\n* param: year (yearInputValue - type: Number)\r\n* check empty input - where inputValue = Number(\"\") => 0\r\n* check year < 1900 & year > current year\r\n\r\n*/\r\n\r\n// Day\r\nfunction validateDay(day, birthDate){\r\n  if (day === 0) {\r\n    dayError.textContent = 'this field is required';\r\n    dayInput.classList.add('js-day-input-add');\r\n    dayLabel.classList.add('js-day-input-label-add');\r\n    return false;\r\n  }\r\n\r\n  if (birthDate.getDate() <= 0 || birthDate.getDate() > 31 || birthDate.getDate() !== day){\r\n    dayError.textContent = 'must be a valid day';\r\n    dayInput.classList.add('js-day-input-add');\r\n    dayLabel.classList.add('js-day-input-label-add');\r\n    return false;\r\n  } else {\r\n    dayError.textContent = '';\r\n    dayInput.classList.remove('js-day-input-add');\r\n    dayLabel.classList.remove('js-day-input-label-add');\r\n    return true;\r\n  }\r\n  \r\n}\r\n\r\n// Month\r\nfunction validateMonth(month){\r\n  if (month === 0) {\r\n    monthError.textContent = 'this field is required';\r\n    monthInput.classList.add('js-month-input-add');\r\n    monthLabel.classList.add('js-month-input-label-add');\r\n    return false;\r\n  }\r\n  if (month <= 0 || month > 12){\r\n    monthError.textContent = 'must be a valid month';\r\n    monthInput.classList.add('js-month-input-add');\r\n    monthLabel.classList.add('js-month-input-label-add');\r\n    return false;\r\n  } else {\r\n    monthError.textContent = '';\r\n    monthInput.classList.remove('js-month-input-add');\r\n    monthLabel.classList.remove('js-month-input-label-add');\r\n    return true;\r\n  }\r\n}\r\n\r\n// Year\r\nfunction validateYear(year){\r\n  \r\n  if (year === 0) {\r\n    yearError.textContent = 'this field is required';\r\n    yearInput.classList.add('js-year-input-add');\r\n    yearLabel.classList.add('js-year-input-label-add');\r\n    return false;\r\n  }\r\n  // note: use birthDate.getFullyear is not reliable - inputYear < 100 bypass the validation!\r\n  if (year < 1900 || year > today.getFullYear()) {\r\n    yearError.textContent = 'must be in the past';\r\n    yearInput.classList.add('js-year-input-add');\r\n    yearLabel.classList.add('js-year-input-label-add');\r\n    return false;\r\n  } else {\r\n    yearError.textContent = '';\r\n    yearInput.classList.remove('js-year-input-add');\r\n    yearLabel.classList.remove('js-year-input-label-add');\r\n    return true;\r\n  }\r\n}\r\n\r\n/* || Utilities\r\n\r\nvalidateLeapYear\r\n* param: yearInputValue - type: Number\r\n* Creates an Date object to check leap year.\r\n* If Date object.getDate() is 29, it is leap year => true.\r\n* In case where it's not a leap year, Date object will autocorrect to March 1, and dateObject.getDate() is not 29 => false.\r\n\r\ngetDaysInMonth\r\n* param: yearInputValue - type: Number, monthDifference - type: Number, validateLeapYear - type: function\r\n* Borrows days based on month before the current month for calculation purposes.\r\n* uses validateLeapYear function to check leap year and change default Feb days to 29 if it is.\r\n* Special case when monthDifference is 0 - when there is no previous month to borrow from, set the number of days to be 31 (similar to Jan).\r\n\r\n\r\n*/\r\n\r\n// Check leap year  \r\nfunction validateLeapYear(yearInputValue) {\r\n  return new Date(yearInputValue, 1, 29).getDate() === 29;\r\n}\r\n\r\n\r\nfunction getDaysInMonth(yearInputValue, monthDifference, validateLeapYear) {\r\n\r\n  const daysInMonthArray = [31, 28, 31 ,30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n  console.log(`Before: ${daysInMonthArray[1]}`); //  checking\r\n  \r\n  if (validateLeapYear(yearInputValue)) {\r\n    daysInMonthArray[1] = 29;\r\n  } \r\n  ;\r\n  console.log(`After: ${daysInMonthArray[1]}`); // checking\r\n\r\n  // deal with negative index issue - when current month - birth_month\r\n  // mth - refer to the month displayed on screen\r\n  if (monthDifference === 0) {\r\n    return daysInMonthArray[0];\r\n  }\r\n  return daysInMonthArray[currentMonth - 1];\r\n \r\n}\r\n\r\n/* console.log(getDaysInMonth(2000, 2, validateLeapYear)); */\r\n\r\n// Click button\r\nform.addEventListener('submit', (e)=>{\r\n  // cancel form default behaviours, preventing it from submitting a form\r\n  e.preventDefault();\r\n\r\n  const yearInputValue = Number(yearInput.value.trim());\r\n  const monthInputValue = Number(monthInput.value.trim());\r\n  const dayInputValue = Number(dayInput.value.trim());\r\n  const birthDate = new Date(yearInputValue, monthInputValue -1, dayInputValue);\r\n  \r\n  const validateDayResult =  validateDay(dayInputValue, birthDate);\r\n  const validateMonthResult = validateMonth(monthInputValue);\r\n  const validateYearResult = validateYear(yearInputValue, today);\r\n \r\n  \r\n\r\n  // validate date - early return to stop calculation\r\n  if (!validateDayResult || !validateMonthResult || !validateYearResult) {\r\n    return;\r\n  } \r\n  console.log(`Leap year: ${validateLeapYear(yearInputValue)}`); // checking\r\n  \r\n  // difference - values to be displayed\r\n  let yearDifference = currentYear - yearInputValue;\r\n  let monthDifference = (currentMonth + 1) - monthInputValue; // current month is zero indexed, add one to make it as regular month we know\r\n  let dayDifference = currentDay - dayInputValue;\r\n\r\n  // when month is less than and equal to 0\r\n  if (monthDifference <= 0) {\r\n    yearDifference -= 1;\r\n    monthDifference += 12;\r\n  }\r\n  // when day is less than 0\r\n  if (dayDifference < 0) {\r\n    monthDifference -= 1;\r\n    dayDifference += getDaysInMonth(yearInputValue, monthDifference, validateLeapYear);\r\n  }\r\n\r\n  // when month is more than equal to 12\r\n  if (monthDifference >=12) {\r\n    yearDifference += 1;\r\n    monthDifference -= 12;\r\n  }\r\n\r\n  // DOM modification\r\n  yearOutput.textContent = yearDifference; \r\n  monthOutput.textContent = monthDifference;\r\n  dayOutput.textContent = dayDifference;\r\n});\r\n\r\n "]}